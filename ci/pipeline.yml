resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.14"

resources:
- name: spring-music
  type: git
  source:
    uri: https://github.com/cloudfoundry-samples/spring-music.git
    branch: master

- name: spring-music-k8s
  type: git
  source:
    uri: https://github.com/nthomson-pivotal/spring-music-k8s.git
    branch: master

- name: spring-music-docker-image
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-hub-username))/spring-music

- name: kubernetes-dev
  type: kubernetes
  source:
    server: ((kubernetes-dev-host))
    namespace: ((kubernetes-dev-namespace))
    token: ((kubernetes-dev-token))
    certificate_authority: ((kubernetes-dev-ca))

jobs:
  - name: package
    plan:
    - get: spring-music
      trigger: true
    - get: spring-music-k8s
    - task: package
      privileged: true
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: java, tag: openjdk-8}

        inputs:
          - name: spring-music

        outputs:
          - name: build-output
            path: spring-music/build/libs

        run:
          dir: "spring-music"
          path: "./gradlew"
          args: ["assemble"]

    - put: spring-music-docker-image
      params:
        build: .
        dockerfile: spring-music-k8s/Dockerfile
        build_args:
          JAR_FILE: build-output/spring-music-1.0.jar
          
  - name: deploy-dev
    plan:
    - get: spring-music-k8s
    - get: spring-music-docker-image
      passed:
        - package
      trigger: true
    - task: render-chart
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: linkyard/concourse-helm-resource}
        inputs:
          - name: spring-music-k8s
        outputs:
          - name: kube-manifests
            path: 
        run:
          path: helm
          args: ["template", "spring-music-k8s/helm/spring-music", "-n", "dev", "--output-dir", "kube-manifests"]

    - put: kubernetes-dev
      params:
        kubectl: apply -f kube-manifests/spring-music/templates
